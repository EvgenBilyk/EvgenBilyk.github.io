{"version":3,"sources":["components/Home.js","store/generateArr.js","store/statisticArr.js","store/conditionSlice.js","Random/Form.js","Random/Conditions.js","Random/FullReport.js","Random/Generate.js","components/RandomGenerate.js","components/Cart.js","App.js","store/index.js","reportWebVitals.js","index.js"],"names":["Home","className","href","getRandomIntInclusive","min","max","Math","ceil","floor","random","renderGenerate","data","count","notDouble","order","arrFull","i","item","includes","push","sort","a","b","arrSmall","map","elem","index","arrHandler","arr","maxHits","objCount","objResult","key","arrMain","length","result","conditonSlice","createSlice","name","initialState","value","resultArr","smallArr","fullArr","arrayGenerate","arrayStatistic","hideArrayBlock","hideStatisticBlock","reducers","recordCondition","state","payload","undefined","arrRandomRecord","resultSmallArr","resultFullArr","actions","selectCondition","condition","selectArrayGenerate","selectArrayStatistic","selectHideStatisticBlock","selectHideArrayBlock","RandomForm","dispatch","useDispatch","onSubmit","event","preventDefault","target","elements","from","to","countNumber","checked","orderNumber","massage","alert","conditionCheck","htmlFor","type","id","placeholder","defaultValue","Conditions","useSelector","double","conditionString","num","arrNum","String","slice","digest","hide","moment","format","FullReport","statisticText","useState","setHide","hideStatistic","setHideStatistic","statisticArr","onClick","scope","join","Generate","RandomGenerate","Cart","App","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","Safary","any","wrapper","React","createRef","menuArrow","menu__icon","menu__body","buttonArrow","lock","unLock","current","classList","contains","remove","useEffect","add","toggle","document","body","ref","path","component","exact","configureStore","reducer","conditonReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.1d118c71.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-4\">\r\n                    <span className=\"image-ava fit\">\r\n                    </span>\r\n                </div>\r\n                <div className=\"col-lg-8\">\r\n                    <header className=\"header-text\">\r\n                        <h1>Приветствую, меня зовут Билык Евгений.</h1>\r\n                    </header>\r\n                    <p>В последнее время меня очень увлекли <strong>frontend</strong> технологии.\r\n                        За последний год я изучил <strong>javascript, html, css.</strong> Познакомился с разными стилями написания кода:\r\n                        <strong>функциональный и ООП.</strong> Работал с <strong>git</strong> с помощью программы gitbush.\r\n                        Разобрался как работает <strong>клиент-серверная</strong> архитектура web приложений.</p>\r\n                    <p> В 2021 я изучил фреймворк <strong>react</strong>.\r\n                        На этой страниц я буду выкладывать свои нароботки сделанные в этом фреймворке. На сейчас готов\r\n                        компонент <strong>генератор случайных чисел</strong>. В дальнейшем планирую написать <strong>корзину от интернет магазина</strong> и <strong>интерфейс для вызова открытых API</strong>.</p>\r\n                    <p><strong>Генератор случайных чисел</strong> я подсмотрел на сайте <a href=\"https://randomus.ru/\">Рандомус</a>, мне понравилась идея и доступность\r\n                        ее реализации: весь код можно написать  на клиентской части. С помощью генератора можно получить до 10 000 случайных чисел в диапазоне от 1 до 999 999 999,\r\n                        вывести их по порядку, убрать повторы если нужно, посмотреть статистику по повторам.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Home;","function renderGenerate(data) {\r\n    const min = data['from'];\r\n    const max = data['to'];\r\n    let count = data['countNumber'];\r\n    const notDouble = data['notDouble'];\r\n    const order = data['orderNumber'];\r\n    const arrFull = [];\r\n\r\n    if (notDouble) {  //получаем массив без дублей при поднятом флаге notDouble\r\n        for (let i = 0; i < count; i++) {\r\n            let item = getRandomIntInclusive(min, max);\r\n            if (arrFull.includes(item)) {\r\n                count++\r\n            } else {\r\n                arrFull.push(item)\r\n            }\r\n        }\r\n    } else { //получаем массив с дублями \r\n        for (let i = 0; i < count; i++) {\r\n            let item = getRandomIntInclusive(min, max);\r\n            arrFull.push(item);\r\n        }\r\n    }\r\n\r\n    if (order) {   //сортируем массив при поднятом флаге order\r\n        arrFull.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n    }\r\n\r\n    const arrSmall = [];\r\n\r\n    arrFull.map((elem, index) => {\r\n        if (index < 10) { arrSmall[index] = elem }\r\n        if (index === 10) { arrSmall[index] = '...' }\r\n        return true;\r\n    });\r\n\r\n    return [arrFull, arrSmall];\r\n}\r\n\r\n/**\r\n * генерируем случайное чилос из указанного диапазона\r\n */\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n}\r\n\r\nexport default renderGenerate;\r\n","function arrHandler(arr, maxHits, order) {\r\n    /*\r\n    *  objCount получаем ассоциативный массив число - колличество повторений\r\n    **/\r\n    let objCount = {};\r\n\r\n    arr.map(elem => {\r\n        if (objCount[elem]) {\r\n            objCount[elem]++\r\n        } else {\r\n            objCount[elem] = 1;\r\n        }\r\n        return true\r\n    })\r\n\r\n    /*\r\n     *  objResult получаем ассоциативный массив колличество повторений - числа которые повторялись\r\n    **/\r\n    let objResult = {};\r\n\r\n    for (let key in objCount) {\r\n        if (objResult[objCount[key]]) {\r\n            objResult[objCount[key]].push(key);\r\n        } else {\r\n            objResult[objCount[key]] = [];\r\n            objResult[objCount[key]].push(key)\r\n        }\r\n    }\r\n\r\n    /*\r\n    *  arrMain массив количества повторений\r\n    **/\r\n\r\n    let arrMain = [];\r\n    for (let key in objResult) {\r\n        if (key > 1) {\r\n            arrMain.push(key);\r\n        }\r\n    }\r\n\r\n    if (order === \"ASC\") {\r\n        arrMain.sort((a, b) => {\r\n            return a - b;\r\n        })\r\n    } else {\r\n        arrMain.sort((a, b) => {\r\n            return b - a;\r\n        })\r\n    }\r\n\r\n    if (maxHits > arrMain.length) maxHits = arrMain.length;\r\n\r\n    /*\r\n    *  result массив количества повторений\r\n    **/\r\n\r\n    let result = [];\r\n    for (let i = 0; i < maxHits; i++) {\r\n        result.push([arrMain[i], objResult[arrMain[i]]]);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default arrHandler;","import { createSlice } from '@reduxjs/toolkit';\r\nimport renderGenerate from './generateArr';\r\nimport arrHandler from './statisticArr';\r\n\r\nexport const conditonSlice = createSlice({\r\n    name: 'condition',\r\n    initialState: {\r\n        value: { 'hide': 'hide' },\r\n        arr: [],\r\n        resultArr: {\r\n            smallArr: [],\r\n            fullArr: []\r\n        },\r\n        arrayGenerate: [[], []],\r\n        arrayStatistic: [],\r\n        hideArrayBlock: \"hide\",\r\n        hideStatisticBlock: \"hide\"\r\n    },\r\n    reducers: {\r\n        recordCondition: (state, data) => {\r\n            state.value = data.payload;\r\n            state.arrayGenerate = renderGenerate(data.payload);\r\n            state.arrayStatistic = arrHandler(state.arrayGenerate[0], 10);\r\n            if (state.arrayGenerate[0] !== undefined) {\r\n                state.hideArrayBlock = '';\r\n            }\r\n            if (state.arrayStatistic[0] !== undefined) {\r\n                state.hideStatisticBlock = '';\r\n            } else {\r\n                state.hideStatisticBlock = 'hide';\r\n            }\r\n        },\r\n        arrRandomRecord: (state, data) => {\r\n            state.arr = data.payload;\r\n        },\r\n        resultSmallArr: (state, data) => {\r\n            state.resultArr.smallArr = data.payload;\r\n        },\r\n        resultFullArr: (state, data) => {\r\n            state.resultArr.fullArr = data.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { recordCondition, arrRandomRecord, resultSmallArr, resultFullArr } = conditonSlice.actions;\r\nexport const selectCondition = state => state.condition.value;\r\nexport const selectArr = state => state.condition.resultArr;\r\nexport const selectArrayGenerate = state => state.condition.arrayGenerate;\r\nexport const selectRandomArr = state => state.condition.arr;\r\nexport const selectArrayStatistic = state => state.condition.arrayStatistic;\r\nexport const selectHideStatisticBlock = state => state.condition.hideStatisticBlock;\r\nexport const selectHideArrayBlock = state => state.condition.hideArrayBlock;\r\nexport default conditonSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { recordCondition } from '../store/conditionSlice';\r\n\r\n\r\nfunction RandomForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    function formData(event) {\r\n\r\n        event.preventDefault();\r\n        let from = event.target.elements.from.value;\r\n        let to = event.target.elements.to.value;\r\n        let countNumber = event.target.elements.countNumber.value;\r\n        let notDouble = event.target.elements.notDouble.checked;\r\n        let orderNumber = event.target.elements.orderNumber.checked;\r\n\r\n        let arr = {\r\n            'from': from,\r\n            'to': to,\r\n            'countNumber': countNumber,\r\n            'notDouble': notDouble,\r\n            'orderNumber': orderNumber\r\n        }\r\n\r\n        function conditionCheck(data) {\r\n\r\n            const min = +data['from'];\r\n            const max = +data['to'];\r\n            let count = +data['countNumber'];\r\n            const notDouble = data['notDouble'];\r\n\r\n            let massage = '';\r\n\r\n            if (min < 0 || max < 0) { massage = 'Введите значения диапазона больше нуля' };\r\n            if (min > 999999999 || max > 999999999) { massage = 'Введите значения диапазона меньше 999 999 999' };\r\n            if (count > 10000) { massage = 'Количество случайных чисел должно быть не более 10 000' };\r\n            if ((max - min + 1) < count && notDouble) { massage = 'уберите условие \"без повторов\" или уменьшите количество случайных чисел' }\r\n            if (min >= max) { massage = 'Минимальное значение диапазона должно быть меньше максимального' };\r\n            if (count < 1) { massage = 'количество случайных чисел должно быть больше одного' }\r\n\r\n            if (massage !== '') {\r\n                dispatch(recordCondition({ 'hide': 'hide' }))\r\n                alert(massage);\r\n            } else {\r\n                dispatch(recordCondition(arr));\r\n            }\r\n        }\r\n        conditionCheck(arr);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formData}>\r\n            <div className=\"row\">\r\n                <h5 className=\"mb-3\">Выберите диапазон</h5>\r\n                <div className=\"col-lg-3\">от</div>\r\n                <div className=\"col-lg-3\">\r\n                    <label htmlFor=\"fromNumber\" className=\"visually-hidden\"></label>\r\n                    <input type=\"number\" name=\"from\" className=\"form-control rand-inp inline\" id=\"fromNumber\"\r\n                        placeholder=\"начало\" defaultValue=\"1\" />\r\n                </div>\r\n                <div className=\"col-lg-1\">до</div>\r\n                <div className=\"col-lg-3\">\r\n                    <label htmlFor=\"toNumber\" className=\"visually-hidden\">конец</label>\r\n                    <input type=\"number\" name=\"to\" className=\"form-control rand-inp inline\" id=\"toNumber\" placeholder=\"конец\"\r\n                        defaultValue=\"100\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <h5 className=\"mb-3\">Выберите количество чисел</h5>\r\n                <div className=\"col-lg-3\">Получить чисел</div>\r\n                <div className=\"col-lg-3\">\r\n                    <label htmlFor=\"countNumber\" className=\"visually-hidden\"></label>\r\n                    <input type=\"number\" className=\"form-control rand-inp inline\" name='countNumber' id=\"countNumber\" placeholder=\"5\"\r\n                        defaultValue=\"5\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" name='notDouble' defaultValue=\"\" id=\"notDoubleNumber\" />\r\n                <label className=\"form-check-label\" htmlFor=\"doubleNumber\">\r\n                    Без повторов\r\n                </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" name='orderNumber' id=\"orderNumber\" />\r\n                <label className=\"form-check-label\" htmlFor=\"orderNumber\" >\r\n                    Сортировать результаты по порядку\r\n                </label>\r\n            </div>\r\n            <div className=\"d-grid gap-2\">\r\n                <button type=\"submit\" className=\"btn-success mt-2\" id=\"btnResult\">Получить случайные\r\n                    числа</button>\r\n            </div>\r\n        </form>);\r\n}\r\n\r\nexport default RandomForm;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCondition } from '../store/conditionSlice';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction Conditions() {\r\n    const condition = useSelector(selectCondition);\r\n\r\n    function digest(num) {\r\n        const arrNum = [\"число\", \"числа\", \"чисел\"];\r\n        let result = [];\r\n        num = String(num);\r\n\r\n        if (num >= 20) {\r\n            num = +num.slice(num.length - 1, num.length);\r\n        } else if (num < 20) {\r\n            num = +num.slice(num.length - 2, num.length);\r\n        }\r\n\r\n        if (num <= 20) {\r\n            if (1 < num < 5) result[0] = arrNum[1];\r\n            if (num > 4) result = arrNum[2];\r\n            if (num === 1) result = arrNum[0];\r\n            if (num === 0) result = arrNum[2];\r\n        } else {\r\n            if (num === 0) result = arrNum[2];\r\n            if (1 < num < 5) result = arrNum[1];\r\n            if (num > 4) result = arrNum[2];\r\n            if (num === 1) result = arrNum[0];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function dateTime() {\r\n        let now = moment();\r\n        return now.format('DD.MM.YYYY h:mm:ss a')\r\n    }\r\n\r\n    const order = (condition['orderNumber']) ? 'с сортировкой результатов' : 'без сортировки результатов';\r\n    const double = (condition['notDouble']) ? 'без повторов' : 'с возможными повторами';\r\n    const conditionString = `${condition['countNumber']} ${digest(condition['countNumber'])}  в диапазоне от ${condition['from']} до ${condition['to']}, ${order}, ${double}`;\r\n\r\n    return (\r\n        <div className={condition.hide}>\r\n            <div className=\"protocol\">\r\n                <table className=\"table\">\r\n                    <tbody className=\"table-condition\">\r\n                        <tr>\r\n                            <td>Условия</td>\r\n                            <td>{conditionString}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Создание</td>\r\n                            <td>{dateTime()}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Conditions;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    selectArrayGenerate,\r\n    selectArrayStatistic,\r\n    selectHideStatisticBlock,\r\n    selectHideArrayBlock\r\n} from '../store/conditionSlice';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction FullReport() {\r\n    const [hide, setHide] = useState('hide');\r\n    const [hideStatistic, setHideStatistic] = useState('hide');\r\n    const fullArr = useSelector(selectArrayGenerate)[0];\r\n    const statisticArr = useSelector(selectArrayStatistic);\r\n    const hideStatisticBlock = useSelector(selectHideStatisticBlock);\r\n    const hideArrayBlock = useSelector(selectHideArrayBlock);\r\n    // console.log(statisticArr)\r\n\r\n\r\n\r\n    function fullReportViev() {\r\n        if (hide === 'hide') {\r\n            setHide('');\r\n        } else {\r\n            setHide('hide');\r\n        }\r\n    }\r\n\r\n    function statisticDoubleViev() {\r\n        if (hideStatistic === 'hide') {\r\n            setHideStatistic('');\r\n        } else {\r\n            setHideStatistic('hide');\r\n        }\r\n    }\r\n\r\n\r\n    let statisticText;\r\n    if (hideStatisticBlock === \"hide\") {\r\n        statisticText = 'Повторяющихся чисел для вывода статистики нет'\r\n    } else {\r\n        statisticText = 'Есть данные по повторяющимся случайным числам'\r\n    }\r\n\r\n    return (\r\n        < >\r\n            <div className=\"col-lg-6 mt-5\">\r\n                <div className={hideArrayBlock}>\r\n                    <p className='mt-3 bold'>{statisticText}</p>\r\n                </div>\r\n                <div className={hideStatisticBlock}>\r\n                    <div className=\"full-report\">\r\n                        <div className=\"mt-2 d-grid gap-2\">\r\n                            <button className=\"bt\" onClick={statisticDoubleViev}>Показать статистику</button>\r\n                        </div>\r\n                        <div >\r\n                            <div className={hideStatistic} >\r\n                                <table className=\"table table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">№ </th>\r\n                                            <th scope=\"col\">случайные числа</th>\r\n                                            <th scope=\"col\">кол-во повторений</th>\r\n                                            <th scope=\"col\">кол-во уникальных чисел</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {statisticArr.map((elem, index) =>\r\n                                            <tr key={index}>\r\n                                                <td>{(index + 1)}</td>\r\n                                                <td className='text-success  bold'>{elem[1].join(', ')}</td>\r\n                                                <td className='text-primary '>{elem[0]}</td>\r\n                                                <td className='text-info '>{elem[1].length}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-6 mt-5\">\r\n                <div className={hideArrayBlock}>\r\n                    <div className=\"full-report\">\r\n                        <p className='mt-3 bold'>Полный отчет по случайно полученным числам</p>\r\n                        <div className=\"mt-2 d-grid gap-2\">\r\n                            <button onClick={fullReportViev}>Полный отчет</button>\r\n                        </div>\r\n                        <div className={hide}>\r\n                            <div className=\"row contein-item\" >\r\n                                {fullArr.map((elem, index) =>\r\n                                    <div className=\"col-lg-2 block-item\" key={index}>\r\n                                        <span className=\"index-arr\">{index}</span>\r\n                                        <span className=\"item-arr fs-2\" >{elem}</span>\r\n                                    </div>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FullReport;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCondition, selectArrayGenerate } from '../store/conditionSlice';\r\n\r\nfunction Generate() {\r\n    const condition = useSelector(selectCondition);\r\n    const smallArr = useSelector(selectArrayGenerate)[1];\r\n\r\n    return (\r\n        <div className={condition.hide}>\r\n            <div className=\"border mt-4 \">\r\n                <div className=\"text-wrap\">\r\n                    <p className=\"text-center fs-2 out\">{smallArr.join(', ')}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Generate;","import RandomForm from \"../Random/Form\";\r\nimport Conditions from \"../Random/Conditions\";\r\nimport FullReport from \"../Random/FullReport\";\r\nimport Generate from \"../Random/Generate\";\r\n\r\nfunction RandomGenerate() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"mb-3 text-success\">Введите данные и получите случайные числа</h3>\r\n            <div className=\"row \">\r\n                <div className=\"col-lg-6\">\r\n                    <RandomForm />\r\n                </div>\r\n                <div className=\"col-lg-6 result-random\">\r\n                    <Conditions />\r\n                    <Generate />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <FullReport />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomGenerate;","function Cart() {\r\n    return (\r\n        <div className='container'>\r\n            <h4>Компонент корзина в разработке, извините пожалуйста</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","import './App.css';\nimport Home from './components/Home';\nimport RandomGenerate from './components/RandomGenerate';\nimport Cart from './components/Cart';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport React, { useEffect } from 'react';\n\nfunction App() {\n\n\n\n\n  const isMobile = {\n    Android: function () {\n      return navigator.userAgent.match(/Andriod/i);\n    },\n    BlackBerry: function () {\n      return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n      return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n      return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n      return navigator.userAgent.match(/IEMobile/i);\n    },\n    Safary: function () {\n      return navigator.userAgent.match(/Mobile/i);\n    },\n    any: function () {\n      return (\n        isMobile.Android() ||\n        isMobile.BlackBerry() ||\n        isMobile.iOS() ||\n        isMobile.Opera() ||\n        isMobile.Safary() ||\n        isMobile.Windows());\n    }\n  };\n\n\n\n  const wrapper = React.createRef();\n  const menuArrow = React.createRef();\n  const menu__icon = React.createRef();\n  const menu__body = React.createRef();\n  const buttonArrow = React.createRef();\n  const lock = React.createRef();\n\n\n  useEffect(() => {\n    if (isMobile.any()) {\n      wrapper.current.classList.add('_touch');\n      menuArrow.current.classList.toggle('_active');\n      buttonArrow.current.classList.toggle('_active');\n    } else {\n      document.body.classList.add('_pc');\n    }\n\n    if (menu__icon.current) {\n\n    }\n  });\n\n  function iconMenu() {\n    lock.current.classList.toggle('_lock');\n    menu__icon.current.classList.toggle('_active');\n    menu__body.current.classList.toggle('_active');\n  }\n\n  function unLock() {\n    if (wrapper.current.classList.contains('_touch') &&\n      menu__icon.current.classList.contains('_active')) {\n      lock.current.classList.remove('_lock');\n      menu__icon.current.classList.remove('_active');\n      menu__body.current.classList.remove('_active');\n    }\n  }\n\n  function menuHide() {\n    menuArrow.current.classList.toggle('_active');\n  }\n\n\n  return (\n    <>\n      <Router>\n        <div ref={lock}>\n          <div className=\"wrapper\" ref={wrapper}>\n            <header className=\"header\">\n              <div className=\"header__container\">\n                <div className=\"header__logo_block\">\n                  <Link to='/' className=\"header__logo\" onClick={unLock}>Разработка на React</Link>\n                </div>\n                <div className=\"header__menu menu\">\n                  <div className=\"menu__icon\" ref={menu__icon} onClick={iconMenu}>\n                    <span></span>\n                  </div>\n                  <nav className=\"menu__body\" ref={menu__body}>\n                    <ul className=\"menu__list\" >\n                      <li ref={menuArrow} className='_active'><Link to='/rendom-generate' className=\"menu__link\" onClick={unLock}>Компоненты React</Link>\n                        <span className=\"menu__arrow \" ref={buttonArrow} onClick={menuHide}></span>\n                        <ul className=\"menu__sub-list\">\n                          <li><Link to='/rendom-generate' className=\"menu__link\" onClick={unLock}>Генератор случайных чисел</Link></li>\n                          <li><Link to='/cart' className=\"menu__link\" onClick={unLock}>Корзина</Link></li>\n                        </ul>\n                      </li>\n                      <li><Link to='/' className=\"menu__link\" onClick={unLock}>Информация</Link></li>\n                    </ul>\n                  </nav>\n                </div>\n              </div>\n            </header>\n          </div>\n        </div>\n\n        <Switch>\n          <Route path='/rendom-generate' component={RandomGenerate}></Route>\n          <Route path='/cart' component={Cart}></Route>\n          <Route exact path='/' component={Home}></Route>\n        </Switch>\n      </Router>\n      <footer></footer>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport conditonReducer from './conditionSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        condition: conditonReducer\r\n    },\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}